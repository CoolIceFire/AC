#include<stdio.h>
#include<string.h>
#define N 100010
struct EDGE{
    int v,next;
}edge[N];
int c[N],first[N],begin[N],end[N];
int n,g,count;
void AddEdge(int u,int v)
{
    edge[g].v=v;
    edge[g].next=first[u];
    first[u]=g++;
}
int lowbit(int x)
{
    return x&(-x);
}
void update(int x,int num)
{
    while(x<=n)
    {
        c[x]+=num;
        x+=lowbit(x);
    }
}
int sum(int x)
{
    int s=0;
    while(x>0)
    {
        s+=c[x];
        x-=lowbit(x);
    }
    return s;
}
void dfs(int u)
{
    int i;
    begin[u]=++count;
    for(i=first[u];i!=-1;i=edge[i].next)
        dfs(edge[i].v);
    end[u]=count;
}
int main()
{
    int u,v,m,ans,i;
    char s[10];
    scanf("%d",&n);
    g=0;
    memset(first,-1,sizeof(first));
    for(i=0;i<n-1;i++)
    {
        scanf("%d%d",&u,&v);
        AddEdge(u,v);
    }
    count=0;
    dfs(1);
    for(i=1;i<=n;i++)
        update(i,1);
    scanf("%d",&m);
    while(m--)
    {
        scanf("%s",s);
        if(s[0]=='Q')
        {
            scanf("%d",&u);
            ans=sum(end[u])-sum(begin[u]-1);
            printf("%d\n",ans);
        }
        else
        {
            scanf("%d",&u);
            if(sum(begin[u])-sum(begin[u]-1))
                update(begin[u],-1);
            else
                update(begin[u],1);
        }
    }
    return 0;
}
