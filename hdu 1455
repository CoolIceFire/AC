#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int a[70],n,vis[70],sum;
int cmp(const void *a,const void *b)
{
    return *(int*)b-*(int*)a;
}
int dfs(int x,int p,int y,int m)
{
    int flag,i;
    if (m*y==sum) return 1;
    for (i=p+1;i<=n;i++)
        if (!vis[i] && x>=a[i])
        {
            vis[i]=1;
            if (x==a[i]) flag=dfs(y,0,y,m+1);
            else flag=dfs(x-a[i],i,y,m);
            vis[i]=0;
            if (p==0) return flag;
            else if (flag) return flag;
            while (a[i]==a[i+1]) i++;
        }
    return 0;
}
int main()
{
  int i,ans;
	while(~scanf("%d",&n)&&n)
    {
        sum=0;
        memset(vis,0,sizeof(vis));
        for (i=1;i<=n;i++) {
            scanf("%d",&a[i]);
            sum+=a[i];
        }
        qsort(a+1,n,sizeof(a[0]),cmp);
        for (i=a[1];i<=sum/2;i++)
            if (sum%i==0 && dfs(i,0,i,0)) {ans=i; break;}
        printf("%d\n",ans);
    }
    return 0;
}
