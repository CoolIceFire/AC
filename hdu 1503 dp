#include <stdio.h>
#include <string.h>
#define size 201

int Max(int x,int y)
{
	return x>y?x:y;
}

struct rem
{
	int i,j;
	char ch;
};

char a[size],b[size];
int dp[size][size];
rem ans[size];
int len;

void lcs(int m,int n)
{
	int i,j;
	memset(dp,0,sizeof(dp));
	len = 0;
	for (i=1;i<=m;i++)
	{
		for (j=1;j<=n;j++)
		{
			if(a[i]==b[j])
				dp[i][j] = dp[i-1][j-1]+1;
			else
				dp[i][j] = Max(dp[i-1][j],dp[i][j-1]);
		}
	}
	if(dp[m][n] == 0)
	{
	    printf("%s%s",a,b);
	}
	else
	{
		i = m,j = n;
		while (i!=0&&j!=0)
		{
			if ((dp[i][j] = dp[i-1][j-1]+1)&&a[i] == b[j])
			{
				ans[len].i = i;
				ans[len].j = j;
				ans[len++].ch = a[i];
				i--,j--;
			}
			else if(dp[i-1][j]>dp[i][j-1])
				i--;
			else
				j--;
		}
	}
}

int main()
{
	int a1,b1,i,j,k;
	while (scanf("%s%s",a+1,b+1)!=EOF)
	{
		a1 = strlen(a+1);
		b1 = strlen(b+1);
		lcs(a1,b1);
		i = j = 1;
		for (k=len-1;k>=0;k--)
		{
			while (i!=ans[k].i)
			{
				printf("%c",a[i]);
				i++;
			}
			while (j!=ans[k].j)
			{
				printf("%c",b[j]);
				j++;
			}
			printf("%c",ans[k].ch);
			i++,j++;
		}
		printf("%s%s\n",a+ans[0].i+1,b+ans[0].j+1);
	}
	return 0;
}
