//首先，很容易写出一位数组下的Max Sum问题，这里重点是把二维数组转化为
//一维数组然后求解。
#include<stdio.h>
#include<string.h>

int arr[110][110],dp[110];
int N;

int Max()
{
  int i,j,sum,max;

	max=sum=dp[0];
	for(i=1;i<N;i++)
	{
		if(sum>0)sum+=dp[i];
		else
			sum=dp[i];
		if(sum>max)
			max=sum;
	}

	return max;
}
int main()
{
	int i,j,k,sum,max;
	
	while(~scanf("%d",&N))
	{
		memset(arr,0,sizeof(arr));

		for(i=0;i<N;i++)
			for(j=0;j<N;j++)
				scanf("%d",&arr[i][j]);
		max=-10000000;
		sum=0;
		for(i=0;i<N;i++)
		{
			memset(dp,0,sizeof(dp));

			for(j=i;j<N;j++)  ////这个循环 表示当前求的是i--j 的范围 j为结束行
			{
				for(k=0;k<N;k++)//这是将之前的行与当前行累加，是二维转换为一维
					dp[k]+=arr[j][k];
				sum=Max();
				max=sum>max?sum:max;
			}
		}
		printf("%d\n",max);
	}
	
	return 0;
}
