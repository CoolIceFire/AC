# include <stdio.h>
 # include <string.h>
 
 
 int n, m ;
 int sx, sy, dx, dy ;
 int g[1010][1010], vis[1010][1010] ;
 int tab[4][2] = {0,-1,0,1,1,0,-1,0} ;
 
 
 void set(int x, int y, int flag)
 {
     int xx, yy ;
     vis[x][y] += flag ;
     int i ;
     for (i = 0 ; i < 4 ; i++)
     {
         for (xx = x+tab[i][0], yy = y+tab[i][1] ; xx>0 && xx <= n && yy>0&&yy <= m ; xx+=tab[i][0], yy +=tab[i][1])
         {
             if (g[xx][yy] != 0) break ;
             vis[xx][yy] += flag ;
         }
     }
 }
 
 
 int gao()
 {
     int i, j, flag ;
     if (g[sx][sy] != g[dx][dy]) return 0 ;
     if (g[sx][sy]==0) return 0 ;
     memset (vis, 0, sizeof(vis)) ;
     set(sx, sy, 1) ;
     set(dx, dy, 2) ;
     for(i = 1 ; i <= n ; i++)
         for (j = 1 ; j <= m ; j++) if (vis[i][j] >= 3) return 1 ;
         
     for (i = 1 ; i <= n ; i++)
         for (flag = 0, j = 1 ; j <= m ; j++)
         {
             if (flag == 0 && vis[i][j] != 0) flag = vis[i][j] ;
             else if (flag != 0 && flag != vis[i][j] && vis[i][j]!=0) return 1;
             else if (flag != 0 && g[i][j] != 0) flag = 0 ;
         }
     
     for (j = 1 ; j<=m ; j++)
         for (flag = 0, i = 1 ; i <= n ; i++)
         {
             if (flag == 0 && vis[i][j] != 0) flag = vis[i][j] ;
             else if (flag != 0 && flag != vis[i][j] && vis[i][j]!=0) return 1;
             else if (flag != 0 && g[i][j] != 0) flag = 0 ;
         }
     return 0 ; 
 }
 
 
 int main ()
 {
     int i, j, q ;
     while (~scanf ("%d%d", &n,&m) && (n||m))
     {
         for (i = 1 ; i <= n ; i++)
             for (j = 1 ; j <= m ; j++)
                 scanf ("%d", &g[i][j]) ;
         scanf ("%d", &q) ;
         while (q--)
         {
             scanf ("%d%d%d%d", &sx, &sy, &dx, &dy) ;
             puts (gao()?"YES":"NO") ;
         }
     }
     return 0 ;
 }
