#include<stdio.h>
#include<string.h>
#include<stdlib.h>

char key[]={'2','2','2','3','3','3','4','4','4','5','5','5','6','6','6','7','7','7','7','8','8','8','9','9','9'};
char ch[100010][8];

int cmp(const void *a,const void *b)
{
  return strcmp((char *)a,(char *)b);
}

int equal(int i,int j)
{
	int k=0;
	for(;k<8;k++)
		if(ch[i][k]!=ch[j][k])break;
	if(k==8)return 1;
	return 0;
}

int main()
{
	int n,i,j,k,len,count,flag;
	char str[30];

	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		scanf("%s",str);
		len=strlen(str);
		for(k=j=0;j<len;j++)
		{
			if(k==3)ch[i][3]='-',k+=1;
			if(str[j]>='A'&&str[j]<='Z')
				ch[i][k++]=key[str[j]-'A'];
			else if(str[j]!='-')
				ch[i][k++]=str[j];
		}
	}
	qsort(ch,n,sizeof(ch[0]),cmp);
	
	flag=0;
	for(i=0;i<n;i++)
	{
		if(equal(i,i+1))
		{
			j=i+1;
			while(j<n&&equal(i,j))
			{
				j+=1;
			}
			for(k=0;k<8;k++)putchar(ch[i][k]);
			printf(" %d\n",j-i);
			i=j-1;
			flag=1;
		}
	}
	if(flag==0)printf("No duplicates.");
	
	return 0;
}
