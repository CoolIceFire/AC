#include<stdio.h>
#include<stdlib.h>
#include<string.h>
char ch[1000][30];
int visited[1000],n;

int cmp(const void *a,const void *b)
{
    char *c=(char *)a;
    char *d=(char *)b;
    return strcmp(c,d);
}

int DFS_visited(int cur,char *word)
{
    int i,flag=0,len=strlen(word);
    visited[cur]=1;
    if(word[len-1]=='m')flag=1;
    else
        for(i=0;i<n;i++)
        {
            if(!visited[i]&&word[len-1]==ch[i][0])
                if(DFS_visited(i,ch[i]))flag=1;
        }
    visited[cur]=0;
    return flag;
}

int DFS()
{
    int i;
    memset(visited,0,1000);
    qsort(ch,n,sizeof(ch[0]),cmp);
    for(i=0;i<n;i++)
    {
        if(ch[i][0]>'b')break;
        if(ch[i][0]=='b')
            if(DFS_visited(i,ch[i]))
                return 1;
    }
    return 0;
}

int main()
{
    int i=0;
    while(gets(ch[i])!=NULL)
    {
        if(ch[i][0]=='0')
        {
            n=i;i=0;
            if(DFS())puts("Yes.");
            else puts("No.");
        }
        i++;
    }
}
